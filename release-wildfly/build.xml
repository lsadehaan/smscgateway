<?xml version="1.0"?>
<project name="restcomm.smscgw.release" default="release" basedir=".">
    <property environment="sys" />
    <property name="release.dir" location="${ant.file.restcomm.smscgw.release}/../target" />
    <property name="base.dir" location="${ant.file.restcomm.smscgw.release}/.." />
    <property name="docs.dir" location="${release.dir}/docs" />
    <property name="bundle.docs.dir" location="${base.dir}/docs-bundle" />
    <property name="cassandra.dir" value="${release.dir}/cassandra" />
    <property name="checkout.dir" value="${base.dir}/checkout" />
    <property name="checkout.restcomm-slee.dir" value="${checkout.dir}/restcomm-slee" />
    <property name="checkout.restcomm-jss7.dir" value="${checkout.dir}/restcomm-jss7" />
    <property name="checkout.restcomm-jss7-ra.dir" value="${checkout.dir}/restcomm-jss7-ra" />
    <property name="checkout.restcomm-map-ra.dir" value="${checkout.dir}/restcomm-map-ra" />
    <property name="checkout.restcomm-smsc.dir" value="${base.dir}/.." />
    <property name="checkout.restcomm-jss7-build.dir" value="${checkout.dir}/restcomm-jss7-build" />
    <property name="checkout.restcomm-diam.dir" value="${checkout.dir}/restcomm-diam" />
    <property name="checkout.restcomm-smpp-extensions.dir" value="${checkout.dir}/restcomm-smpp-extensions" />
	<property name="checkout.restcomm-smpp-ra.dir" value="${checkout.dir}/restcomm-smpp-ra" />
    <property name="checkout.restcomm-slee.jss7-build.dir" value="${checkout.dir}/restcomm-slee.jss7-build" />
    <property name="checkout.restcomm-slee.jainslee-jss7-build.dir" value="${checkout.dir}/restcomm-jains-slee-jss7-build" />
    <property name="checkout.restcomm-cloudhopper.smpp.dir" value="${checkout.dir}/restcomm-cloudhopper-smpp-build" />
    <property name="checkout.map.dir" value="${base.dir}/checkout/map" />
    <property name="release.map.dir" value="${base.dir}/checkout/map-release" />
    <property name="restcomm.smsc.git.tag" value="master" />
    <property name="restcomm.smsc.release.version" value="7.4.0-SNAPSHOT" />
    <!-- Options for referring to release resoure verions -->
    
    <!-- SLEE staff -->
    <property name="restcomm-slee.build-number" value="76" />
    <property name="restcomm-slee.version" value="7.2.0-68" />
    <property name="restcomm-slee.release" value="7.2.0-68.76" />
    
    <!-- jss7 stack -->
    <property name="restcomm-jss7.build-number" value="102" />
    <property name="restcomm-jss7.version" value="7.4.0-${restcomm-jss7.build-number}" />
    <!-- <property name="restcomm-jss7.release" value="7.4.0-9" /> -->

    <property name="restcomm-map-ra.build-number" value="177" />
    <property name="restcomm-map-ra.version" value="7.4.0-${restcomm-map-ra.build-number}" />
    <!-- <property name="restcomm-map-ra.release" value="7.4.0-17" /> -->
    <!-- Diameter mux and RAs -->
    <property name="restcomm-diam.build-number" value="178" />
    <property name="restcomm-diam.version" value="1.7.0" />
    <property name="restcomm-diam-ra.build-number" value="18" />
    <property name="restcomm-diam.resources.version" value="7.1.18" />
    <!-- SMPP extentions and and RAs -->
    <property name="restcomm-smpp-extensions.build-number" value="128" />
    <property name="restcomm-smpp-extensions.version" value="7.1.0" />
    <!-- Required version of smpp must include latest added events -->
    <property name="restcomm-smpp-ra.build-number" value="128" />
    <property name="restcomm-smpp-ra.version" value="7.1.0-${restcomm-smpp-ra.build-number}" />
    <!-- Cassandra community version -->
    <property name="community-cassandra.version" value="3.11.2" />
    <!-- 2.2.6 -->
    <!-- JainSlee SIP RA DU - we do not use it now - getting from SLEE binaries -->
    <property name="restcomm-slee-sip11.build-number" value="94" />
    <property name="restcomm-slee-sip11.tag" value="2.9.${restcomm-slee-sip11.build-number}" />
    <property name="restcomm-slee-sip11.version" value="${restcomm-slee-sip11.tag}" />
    <!-- Cloudhopper will be removed when the code ready in official github -->
    <property name="restcomm-cloudhopper.smpp.tag" value="master_submit_multi-2" />
    <property name="cloudbees.url" value="https://mobicents.ci.cloudbees.com" />
    <property name="github.url" value="https://github.com/RestComm" />
    <!--GET restcomm-Slee & restcomm-jss7 & restcomm-diameter & DSE Cassandra - properties-->
    <property name="restcomm-jss7.tag" value="${restcomm-jss7.version}" />
    <property name="restcomm-slee.ss7.tag" value="${restcomm-map-ra.version}" />
    <property name="restcomm-slee.download.distro.name" value="restcomm-slee-${restcomm-slee.version}.${restcomm-slee.build-number}" />
    <property name="restcomm-slee.download.distro.file" value="${restcomm-slee.download.distro.name}-wildfly-10.1.0.Final.zip" />
    <property name="restcomm-slee.download.url" value="${github.url}/jain-slee/releases/download/${restcomm-slee.release}/${restcomm-slee.download.distro.file}" />
    <property name="restcomm-slee.distro.zip.path" value="${checkout.dir}/${restcomm-slee.download.distro.file}" />
    <property name="restcomm-jss7.download.distro.file" value="restcomm-jss7-${restcomm-jss7.version}.zip" />
    <property name="restcomm-jss7.download.url" value="${github.url}/jss7/releases/download/${restcomm-jss7.version}/${restcomm-jss7.download.distro.file}" />
    <property name="restcomm-jss7.distro.zip.path" value="${checkout.dir}/${restcomm-jss7.download.distro.file}" />
    <property name="restcomm-map-ra.download.jar.file" value="restcomm-slee-ra-map-du-${restcomm-map-ra.version}.jar" />
    <property name="restcomm-ss7-ra.download" value="restcomm-slee-ss7-ra-${restcomm-map-ra.version}" />
    <property name="restcomm-ss7-ra.download.zip.file" value="${restcomm-ss7-ra.download}.zip" />
    <property name="restcomm-ss7-ra.download.zip.path" value="${checkout.dir}/${restcomm-ss7-ra.download}.zip" />
    <property name="restcomm-map-ra-docs.version" value="7.0.53" />
    <property name="restcomm-map-ra.download.docs.file" value="RA_docs.zip" />
    <property name="restcomm-map-ra.download.jar.url" value="${github.url}/jain-slee.ss7/archive/${restcomm-map-ra.version}.zip" />
    <property name="restcomm-map-ra.download.docs.url" value="${github.url}/jain-slee.ss7/releases/download/${restcomm-map-ra-docs.version}/${restcomm-map-ra.download.docs.file}" />
    <property name="restcomm-map-ra.distro.jar.path" value="${checkout.dir}/${restcomm-map-ra.download.jar.file}" />
    <property name="restcomm-map-ra.distro.docs.path" value="${checkout.dir}/${restcomm-map-ra.download.docs.file}" />
    <property name="restcomm-diam.download.distro.file" value="restcomm-diameter-mux-wildfly-${restcomm-diam.version}.${restcomm-diam.build-number}.zip" />
    <property name="restcomm-diam.download.url" value="${cloudbees.url}/job/RestComm-jDiameter-1.x/${restcomm-diam.build-number}/artifact/release/${restcomm-diam.download.distro.file}" />
    <property name="restcomm-diam.distro.zip.path" value="${checkout.dir}/${restcomm-diam.download.distro.file}" />
    <property name="restcomm-diam-ra-base.download.jar.file" value="diameter-restcomm-slee-ra-diameter-base-ra-DU-${restcomm-diam.resources.version}.jar" />
    <property name="restcomm-diam-ra-base.download.url" value="${cloudbees.url}/job/Restcomm-JAIN-SLEE-7-jDiameter-RAs/${restcomm-diam-ra.build-number}/artifact/resources/diameter-base/du/target/${restcomm-diam-ra-base.download.jar.file}" />
    <property name="restcomm-diam-ra-base.distro.jar.path" value="${checkout.dir}/${restcomm-diam-ra-base.download.jar.file}" />
    <property name="restcomm-diam-ra-ro.download.jar.file" value="diameter-restcomm-slee-ra-diameter-ro-ra-DU-${restcomm-diam.resources.version}.jar" />
    <property name="restcomm-diam-ra-ro.download.url" value="${cloudbees.url}/job/Restcomm-JAIN-SLEE-7-jDiameter-RAs/${restcomm-diam-ra.build-number}/artifact/resources/diameter-ro/du/target/${restcomm-diam-ra-ro.download.jar.file}" />
    <property name="restcomm-diam-ra-ro.distro.jar.path" value="${checkout.dir}/${restcomm-diam-ra-ro.download.jar.file}" />
    <property name="restcomm-smpp-extensions.download.distro.file" value="restcomm-smpp-extensions-${restcomm-smpp-extensions.version}-${restcomm-smpp-extensions.build-number}.zip" />
    <property name="restcomm-smpp-extensions.download.url" value="${github.url}/smpp-extensions/releases/download/${restcomm-smpp-extensions.version}-${restcomm-smpp-extensions.build-number}/${restcomm-smpp-extensions.download.distro.file}" />
    <property name="restcomm-smpp-extensions.distro.zip.path" value="${checkout.dir}/${restcomm-smpp-extensions.download.distro.file}" />
    <property name="restcomm-smpp-ra.download.jar.file" value="smpp-server-ra-du-${restcomm-smpp-ra.version}.jar" />
	<property name="restcomm-smpp-ra.download.docs.file" value="smpp-ra-generated-docs.zip" />
    <property name="restcomm-smpp-ra.download" value="jain-slee.smpp-${restcomm-smpp-ra.version}" />
	<property name="restcomm-smpp-ra.download.docs.url" value="${github.url}/jain-slee.smpp/releases/download/${restcomm-smpp-ra.version}/${restcomm-smpp-ra.download.docs.file}" />
    <property name="restcomm-smpp-ra.zip.file" value="${restcomm-smpp-ra.download}.zip" />
    <property name="restcomm-smpp-ra.zip.path" value="${checkout.dir}/${restcomm-smpp-ra.zip.file}" />
    <property name="restcomm-smpp-ra.download.url" value="${github.url}/jain-slee.smpp/archive/${restcomm-smpp-ra.version}.zip" />
    <property name="restcomm-smpp-ra.distro.jar.path" value="${checkout.dir}/${restcomm-smpp-ra.download.jar.file}" />
	<property name="restcomm-smpp-ra.distro.docs.path" value="${checkout.dir}/${restcomm-smpp-ra.download.docs.file}" />
    <property name="checkout.community-cassandra.dir" value="${cassandra.dir}/apache-${community-cassandra.version}" />
    <property name="community-cassandra.download.distro.file" value="apache-cassandra-${community-cassandra.version}-bin.tar.gz" />
    <property name="community-cassandra.untar.distro.file" value="apache-cassandra-${community-cassandra.version}-bin.tar" />
    <property name="community-cassandra.download.url" value="http://www-eu.apache.org/dist/cassandra/${community-cassandra.version}/${community-cassandra.download.distro.file}" />
    <property name="community-cassandra.distro.zip.path" value="${checkout.dir}/${community-cassandra.download.distro.file}" />
    <property name="community-cassandra.distro.untar.path" value="${checkout.dir}/${community-cassandra.untar.distro.file}" />
    <property name="restcomm-slee-sip11.download.distro.file" value="sip11-ra-DU-${restcomm-slee-sip11.version}.jar" />
    <property name="restcomm-slee-sip11.download.url" value="${cloudbees.url}/job/Restcomm-JAIN-SLEE-SIP-RA/${restcomm-slee-sip11.build-number}/artifact/resources/sip11/du/target/${restcomm-slee-sip11.download.distro.file}" />
    <property name="restcomm-slee-sip11.distro.zip.path" value="${checkout.dir}/${restcomm-slee-sip11.download.distro.file}" />
    <property name="release.build.goals" value="clean install dependency:tree -Dmaven.test.skip=true" />
    <property name="release.ts.deploy.goals.local" value="clean deploy -DaltDeploymentRepository=local-output::default::file:///tmp/output" />

    <property name="wildfly.home.relative.path" value="wildfly-10.1.0.Final"/>
    <property name="jboss.home" value ="${release.dir}/${wildfly.home.relative.path}/"/>
    <property name="packages.dir" value="${basedir}/checkout" />
    <property name="validate.versions" value="" />
    <property name="mvn.javadoc" value="org.apache.maven.plugins:maven-javadoc-plugin:2.10.4" />
    <property name="release.profile" value="release-wildfly"/>
    <property name="diameter.build" value="178"/>
    <property name="diameter.version" value="1.7.0.${diameter.build}"/>
    <property name="diameter.zip" value="restcomm-diameter-mux-wildfly-${diameter.version}.zip"/>
    <property name="diameter.download.url" value="${cloudbees.url}/job/RestComm-jDiameter-1.x/${diameter.build}/artifact/release/${diameter.zip}" />
    <property name="diameter.distro.zip.path" value="restcomm-diameter.zip" />
    <property name="jss7.version" value="${restcomm-jss7.version}" />
    <property name="smpp.extensions.version" value="${restcomm-smpp-extensions.version}-${restcomm-smpp-extensions.build-number}" />

    <condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
        <os family="windows" />
    </condition>

    <taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${ant.file.restcomm.smscgw.release}/../ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>

    <target name="clean">
        <delete dir="${release.dir}" />
        <delete dir="${base.dir}/checkout" />
        <delete dir="${base.dir}/docs-bundle" />
        <delete dir="${base.dir}/docs-bundle" />
        <delete>
            <fileset dir="${base.dir}">
                <include name="restcomm-smsc-*.*" />
            </fileset>
        </delete>
    </target>

    <!-- add checkout-sources -->
    <target name="release" depends="get-deps,extract-deps,clean-up-restcomm-slee,build-smsc,copy-smsc,build-docs,copy-docs,make-final-zip,bundle-documentation" />
    
    <target name="release-with-jss7-and-ras" depends="build-with-jss7-and-ras.ss7, build-with-jss7-and-ras.ras, release" />
    
    <target name="build-with-jss7-and-ras.ss7">
        <echo>Clone restcomm jss7</echo>
        <exec failonerror="true" executable="git">
            <arg value="clone" />
            <arg value="https://github.com/RestComm/jss7" />
            <arg value="-b" />
            <arg value="${restcomm-jss7.tag}" />
            <arg value="${checkout.restcomm-jss7-build.dir}" />
        </exec>
        <echo>Building RestComm jss7 from sources</echo>
        <ant antfile="${checkout.restcomm-jss7-build.dir}/release/build.xml" target="build-asn" />
        <ant antfile="${checkout.restcomm-jss7-build.dir}/release/build.xml" target="build-sctp" />
        <ant antfile="${checkout.restcomm-jss7-build.dir}/release/build.xml" target="build-upstream-jss7" />
        <ant antfile="${checkout.restcomm-jss7-build.dir}/release/build.xml" target="build-jss7-addon" />
    </target>

    <target name="build-with-jss7-and-ras.ras">
        <echo>Clone RestComm JainSlee.jss7 (JSS7 RA's)</echo>
        <exec failonerror="true" executable="git">
            <arg value="clone" />
            <arg value="https://github.com/RestComm/jain-slee.ss7.git" />
            <arg value="-b" />
            <arg value="${restcomm-slee.ss7.tag}" />
            <arg value="${checkout.restcomm-slee.jainslee-jss7-build.dir}" />
        </exec>
        <echo>Building JainSlee.jss7 (JSS7 RA's) from sources</echo>
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-slee.jainslee-jss7-build.dir}">
            <arg line="clean install -Prelease -Dmaven.test.skip=true" />
        </exec>
    </target>

    <target name="checkout-ss7-map">
        <echo>Clone restcomm JainSlee.jss7 (JSS7 RA's)</echo>
        <exec failonerror="true" executable="git">
            <arg value="clone" />
            <arg value="https://github.com/RestComm/jain-slee.ss7.git" />
            <arg value="-b" />
            <arg value="${restcomm-slee.ss7.tag}" />
            <arg value="${checkout.restcomm-slee.jainslee-jss7-build.dir}" />
        </exec>
    </target>

    <target name="deploy">
        <ant antfile="${ant.file.restcomm.smscgw.release}" target="release">
            <property name="release.build.goals" value="${release.ts.deploy.goals}" />
        </ant>
    </target>

    <target name="deploy-local">
        <ant antfile="${ant.file.restcomm.smscgw.release}" target="release">
            <property name="release.build.goals" value="${release.ts.deploy.goals.local}" />
        </ant>
    </target>

    <target name="get-deps" depends="get-restcomm-slee,get-restcomm-jss7,get-restcomm-map-ra,get-restcomm-map-ra-docs,get-restcomm-diam,get-restcomm-diam-base,get-restcomm-diam-ro,get-restcomm-smpp-extensions,get-restcomm-smpp-ra,get-restcomm-smpp-ra-docs,get-community-cassandra" />

    <target name="extract-deps" depends="extract-restcomm-slee,extract-restcomm-jss7,build-map-ra,build-smpp-ra,build-smpp-ra-copy,extract-restcomm-map-ra-docs,extract-restcomm-diam,extract-restcomm-smpp-extensions,extract-restcomm-smpp-ra-docs,extract-community-cassandra" />
   
    <available file="${restcomm-slee.distro.zip.path}" property="got.restcomm-slee" />
    <target name="get-restcomm-slee" unless="got.restcomm-slee">
        <echo>Downloading RestComm Slee version: ${restcomm-slee.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-slee.download.url}" />
            <arg value="--output-document=${restcomm-slee.download.distro.file}" />
            <arg value="--no-check-certificate" />
        </exec>
        <move file="${base.dir}/${restcomm-slee.download.distro.file}" todir="${checkout.dir}" />
    </target>

    <target name="extract-restcomm-slee" depends="get-restcomm-slee">
        <delete dir="${checkout.restcomm-slee.dir}" failonerror="false" />
        <unzip src="${restcomm-slee.distro.zip.path}" dest="${release.dir}" />
        <copy todir="${release.dir}" failonerror="true">
            <fileset dir="${release.dir}/restcomm-slee-${restcomm-slee.version}.${restcomm-slee.build-number}-wildfly-10.1.0.Final">
                <include name="**/*" />
            </fileset>
        </copy>
        <delete dir="${release.dir}/restcomm-slee-${restcomm-slee.version}.${restcomm-slee.build-number}-wildfly-10.1.0.Final" includeemptydirs="true" failonerror="false" verbose="false" />
    </target>

    <available file="${restcomm-jss7.distro.zip.path}" property="got.restcomm-jss7" />
    <target name="get-restcomm-jss7" unless="got.restcomm-jss7">
	<echo>Downloading RestComm JSS7 version: ${restcomm-jss7.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-jss7.download.url}" />
            <arg value="--output-document=${restcomm-jss7.download.distro.file}" />
            <arg value="--no-check-certificate" />
        </exec>
        <move file="${base.dir}/${restcomm-jss7.download.distro.file}" todir="${checkout.dir}" />
    </target>
    <target name="extract-restcomm-jss7" depends="get-restcomm-jss7">
        <delete dir="${checkout.restcomm-jss7.dir}" failonerror="false" />
        <unzip src="${restcomm-jss7.distro.zip.path}" dest="${checkout.restcomm-jss7.dir}" />
        <move file="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}" tofile="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}" failonerror="false" />
    </target>

    <available file="${restcomm-ss7-ra.download.zip.path}" property="got.restcomm-map-ra" />
    <target name="get-restcomm-map-ra" unless="got.restcomm-map-ra">
        <echo>Downloading RestComm MAP RA version: ${restcomm-map-ra.version}</echo>
	<echo>expecting to have file: ${restcomm-map-ra.distro.jar.path}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-map-ra.download.jar.url}" />
            <arg value="--output-document=${restcomm-ss7-ra.download.zip.file}" />
            <arg value="--no-check-certificate" />
        </exec>
	<unzip src="${restcomm-ss7-ra.download.zip.file}" dest="${checkout.dir}/${restcomm-ss7-ra.download}" />
    </target>
    
    <available file="${restcomm-map-ra.distro.docs.path}" property="got.restcomm-map-ra-docs" />
    <target name="get-restcomm-map-ra-docs" unless="got.restcomm-map-ra-docs">
        <echo>Downloading RestComm MAP RA docs version: ${restcomm-map-ra.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-map-ra.download.docs.url}" />
            <arg value="--output-document=${restcomm-map-ra.download.docs.file}" />
            <arg value="--no-check-certificate" />
        </exec>
        <move file="${base.dir}/${restcomm-map-ra.download.docs.file}" todir="${checkout.dir}" />
    </target>
    <target name="extract-restcomm-map-ra-docs" depends="get-restcomm-map-ra-docs">
        <delete dir="${checkout.restcomm-jss7-ra.dir}" failonerror="false" />
        <delete dir="${checkout.restcomm-map-ra.dir}" failonerror="false" />
        <unzip src="${restcomm-map-ra.distro.docs.path}" dest="${checkout.restcomm-jss7-ra.dir}" />
        <unzip src="${checkout.restcomm-jss7-ra.dir}/MAP/generated-docs.zip" dest="${checkout.restcomm-map-ra.dir}" />
    </target>
    <available file="${restcomm-slee-sip11.distro.zip.path}" property="got-restcomm-sip-ra" />

    <available file="${restcomm-diam.distro.zip.path}" property="got.restcomm-diam" />
    <target name="get-restcomm-diam" unless="got.restcomm-diam">
        <echo>Downloading RestComm Diameter version: ${restcomm-diam.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${diameter.download.url}" />
            <arg value="--no-check-certificate" />
        </exec>
        <move file="${base.dir}/${restcomm-diam.download.distro.file}" todir="${checkout.dir}" />
    </target>
    <target name="extract-restcomm-diam" depends="get-restcomm-diam">
        <delete dir="${checkout.restcomm-diam.dir}" failonerror="false" />
        <unzip src="${restcomm-diam.distro.zip.path}" dest="${checkout.restcomm-diam.dir}" />
    </target>
    
    <available file="${restcomm-diam-ra-base.distro.jar.path}" property="got-restcomm-diam-base" />
    <target name="get-restcomm-diam-base" unless="got-restcomm-diam-base">
        <echo>Downloading RestComm Diameter RA base version: ${restcomm-diam.resources.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-diam-ra-base.download.url}" />
            <arg value="--output-document=${restcomm-diam-ra-base.download.jar.file}" />
            <arg value="--no-check-certificate" />
        </exec>
        <move file="${base.dir}/${restcomm-diam-ra-base.download.jar.file}" todir="${checkout.dir}" />
    </target>
    <available file="${restcomm-diam-ra-ro.distro.jar.path}" property="got-restcomm-diam-ro" />
    <target name="get-restcomm-diam-ro" unless="got-restcomm-diam-ro">
        <echo>Downloading RestComm Diameter RA ro version: ${restcomm-diam.resources.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-diam-ra-ro.download.url}" />
            <arg value="--output-document=${restcomm-diam-ra-ro.download.jar.file}" />
            <arg value="--no-check-certificate" />
        </exec>
        <move file="${base.dir}/${restcomm-diam-ra-ro.download.jar.file}" todir="${checkout.dir}" />
    </target>

    <available file="${restcomm-smpp-extensions.distro.zip.path}" property="got.restcomm-smpp-extensions" />
    <target name="get-restcomm-smpp-extensions" unless="got.restcomm-smpp-extensions">
        <echo>Downloading RestComm SMPP Extenaions: ${restcomm-smpp-extensions.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-smpp-extensions.download.url}" />
            <arg value="--output-document=${restcomm-smpp-extensions.download.distro.file}" />
            <arg value="--no-check-certificate" />
        </exec>
        <move file="${base.dir}/${restcomm-smpp-extensions.download.distro.file}" todir="${checkout.dir}" />
    </target>
    <target name="extract-restcomm-smpp-extensions" depends="get-restcomm-smpp-extensions">
        <delete dir="${checkout.restcomm-smpp-extensions.dir}" failonerror="false" />
        <unzip src="${restcomm-smpp-extensions.distro.zip.path}" dest="${checkout.restcomm-smpp-extensions.dir}" />
    </target>
 
    <available file="${restcomm-smpp-ra.zip.path}" property="got.restcomm-smpp-ra" />
    <target name="get-restcomm-smpp-ra" unless="got.restcomm-smpp-ra">
        <echo>Downloading RestComm SMPP RA: ${restcomm-smpp-ra.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-smpp-ra.download.url}" />
            <arg value="--output-document=${restcomm-smpp-ra.zip.file}" />
            <arg value="--no-check-certificate" />
        </exec>
	<unzip src="${restcomm-smpp-ra.zip.file}" dest="${checkout.dir}/${restcomm-smpp-ra.download}" />
    </target>

	<available file="${restcomm-smpp-ra.distro.docs.path}" property="got.restcomm-smpp-ra-docs" />
	<target name="get-restcomm-smpp-ra-docs" unless="got.restcomm-smpp-ra-docs">
		<echo>Downloading RestComm SMPP RA docs version: ${restcomm-smpp-ra.version}</echo>
		<exec failonerror="true" executable="wget">
			<arg value="${restcomm-smpp-ra.download.docs.url}" />
		    <arg value="--output-document=${restcomm-smpp-ra.download.docs.file}" />
		    <arg value="--no-check-certificate" />
		</exec>
		<move file="${base.dir}/${restcomm-smpp-ra.download.docs.file}" todir="${checkout.dir}"/>
	</target>

	<target name="extract-restcomm-smpp-ra-docs" depends="get-restcomm-smpp-ra-docs">
		<delete dir="${checkout.restcomm-smpp-ra.dir}" failonerror="false" />
		<unzip src="${restcomm-smpp-ra.distro.docs.path}" dest="${checkout.restcomm-smpp-ra.dir}"/>
	</target>

    <!-- Cassandra  -->
    <available file="${community-cassandra.distro.zip.path}" property="got.community-cassandra" />
    <target name="get-community-cassandra" unless="got.community-cassandra">
        <echo>Downloading Community Cassandra only version: ${community-cassandra.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${community-cassandra.download.url}" />
        </exec>
        <move file="${base.dir}/${community-cassandra.download.distro.file}" todir="${checkout.dir}" />
    </target>
    <target name="extract-community-cassandra" depends="get-community-cassandra">
        <delete dir="${checkout.community-cassandra.dir}" failonerror="false" />
        <gunzip src="${community-cassandra.distro.zip.path}" />
        <untar src="${community-cassandra.distro.untar.path}" dest="${cassandra.dir}" />
    </target>

    <target name="clean-up-restcomm-slee">
        <delete includeemptydirs="true" failonerror="true">
            <fileset dir="${release.dir}/docs/resources">
                <include name="**" />
                <exclude name="**/sip11/**" />
                <exclude name="**/http-client/**" />
                <exclude name="**/http-servlet/**" />
            </fileset>
        </delete>
        <delete dir="${release.dir}/docs/enablers" includeemptydirs="true" failonerror="true" />
        <delete dir="${release.dir}/docs/examples" includeemptydirs="true" failonerror="true" />
        <delete includeemptydirs="true" failonerror="true">
            <fileset dir="${release.dir}/resources">
                <include name="**" />
                <exclude name="**/sip11/**" />
                <exclude name="**/http-client/**" />
                <exclude name="**/http-servlet/**" />
                <exclude name="**/map/**" />
		        <exclude name="**/smpp/**" />
            </fileset>
        </delete>
        <delete includeemptydirs="true" failonerror="true">
	    <fileset dir="${release.dir}/extra">
                <include name="**" />
                <exclude name="**/restcomm-http/**" />
            </fileset>	
	</delete>
        <delete dir="${release.dir}/enablers" includeemptydirs="true" failonerror="true" />
        <delete dir="${release.dir}/examples" includeemptydirs="true" failonerror="true" />
        <delete file="${release.dir}/sources.zip" failonerror="true" />
	<delete includeemptydirs="true" failonerror="true">
		<fileset dir="${jboss.home}/standalone/deployments">
			<include name="**/*.jar" />
		</fileset>
	</delete>
    </target>

    <target name="checkout-sources">
	<echo>Checking out sources: validate -Pcheckout -Dcheckout.basedir=${packages.dir} ${validate.versions}</echo>
	<!--
	commented out for tests
	<delete dir="${packages.dir}" />
	-->
	<exec failonerror="true" executable="${mvn.executable}" dir="${ant.file.restcomm.smscgw.release}/../">
	    <arg line="validate -Pcheckout -Dcheckout.basedir=${packages.dir} ${validate.versions}" />
	</exec>
    </target>

    <target name="checkout-smsc-persistence">
        <echo>Checking out RestComm SMSC persistence branch</echo>
        <exec failonerror="true" executable="git">
            <arg value="clone" />
            <arg value="https://github.com/RestComm/smscgateway.git" />
            <arg value="${checkout.restcomm-smsc.dir}" />
        </exec>
        <exec failonerror="true" executable="git">
            <arg value="--git-dir=${checkout.restcomm-smsc.dir}/.git" />
            <arg value="--work-tree=${checkout.restcomm-smsc.dir}" />
            <arg value="checkout" />
            <arg value="${restcomm.smsc.git.tag}" />
        </exec>
    </target>

    <target name="build-map-ra">
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.dir}/${restcomm-ss7-ra.download}/jain-slee.ss7-${restcomm-map-ra.version}/resources/map/">
            <arg line="clean install" />
        </exec>
	<delete dir="${release.dir}/resources/map" />	
	<mkdir dir="${release.dir}/resources/map" />
        <move file="${checkout.dir}/${restcomm-ss7-ra.download}/jain-slee.ss7-${restcomm-map-ra.version}/resources/map/du/target/restcomm-slee-ra-map-du-${restcomm-map-ra.version}.jar" todir="${release.dir}/resources/map" failonerror="true" />
	<move file="${checkout.dir}/${restcomm-ss7-ra.download}/jain-slee.ss7-${restcomm-map-ra.version}/resources/map/du/target/build.xml" todir="${release.dir}/resources/map" failonerror="true" />
    </target>

	<target name="build-smpp-ra">
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.dir}/${restcomm-smpp-ra.download}/jain-slee.smpp-${restcomm-smpp-ra.version}/resources/smpp/">
            <arg line="clean install" />
        </exec>
	</target>

	<target name="build-smpp-ra-copy">
		<delete dir="${release.dir}/resources/smpp" />	
		<mkdir dir="${release.dir}/resources/smpp" />
        <move file="${checkout.dir}/${restcomm-smpp-ra.download}/jain-slee.smpp-${restcomm-smpp-ra.version}/resources/smpp/du/target/smpp-server-ra-du-${restcomm-smpp-ra.version}.jar" todir="${release.dir}/resources/smpp" failonerror="true" />
		<move file="${checkout.dir}/${restcomm-smpp-ra.download}/jain-slee.smpp-${restcomm-smpp-ra.version}/resources/smpp/du/target/build.xml" todir="${release.dir}/resources/smpp" failonerror="true" />
	</target>

    <target name="build-clhpp">
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-smsc.dir}">
            <arg line="-version" />
        </exec>
        <echo>Clone RestComm SMPP</echo>
        <exec failonerror="true" executable="git">
            <arg value="clone" />
            <arg value="https://github.com/RestComm/cloudhopper-smpp.git" />
            <arg value="-b" />
            <arg value="${restcomm-cloudhopper.smpp.tag}" />
            <arg value="${checkout.restcomm-cloudhopper.smpp.dir}" />
        </exec>
        <echo>Building RestComm SMPP from source</echo>
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-cloudhopper.smpp.dir}">
            <arg line="clean install -Dmaven.test.skip=true" />
            <!-- -Prelease -->
        </exec>
    </target>

    <target name="build-smsc">
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-smsc.dir}">
            <arg line="${release.build.goals} -Dmaven.test.skip=true -Passembly" />
        </exec>
        <ant antfile="build.xml" dir="${checkout.restcomm-smsc.dir}/test/smpp-load/" />
    </target>

	<target name="copy-smsc">
		<mkdir dir="${release.dir}/extra" />
		<mkdir dir="${release.dir}/resources/diameter-base" />
		<mkdir dir="${release.dir}/resources/diameter-ro" />

		<echo>Copy Diameter</echo>
		<copy todir="${release.dir}/extra/restcomm-diam" failonerror="true">
            <fileset dir="${checkout.restcomm-diam.dir}">
                <include name="**" />
            </fileset>
		</copy>
		<ant antfile="${release.dir}/extra/restcomm-diam/build.xml" target="deploy">
			<property name="basedir" value="${release.dir}/extra/restcomm-diam" />	
		</ant>

		<echo>Copy SS7</echo>
		<copy todir="${release.dir}/extra/restcomm-ss7" failonerror="true">
            <fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}">
                <include name="**" />
            </fileset>
        </copy>
		<ant antfile="${release.dir}/extra/restcomm-ss7/ss7-wildfly/build.xml" target="deploy">
			<property name="basedir" value="${release.dir}/extra/restcomm-ss7/ss7-wildfly" />	
		</ant>

		<echo>Copy SMPP Extensions</echo>
		<copy todir="${release.dir}/extra/restcomm-smpp-extensions" failonerror="true">
            <fileset dir="${checkout.restcomm-smpp-extensions.dir}/restcomm-smpp-extensions-${restcomm-smpp-extensions.version}-${restcomm-smpp-extensions.build-number}">
                <include name="**" />
            </fileset>
        </copy>
		<ant antfile="${release.dir}/extra/restcomm-smpp-extensions/wildfly/build.xml" target="deploy">
			<property name="basedir" value="${release.dir}/extra/restcomm-smpp-extensions/wildfly" />	
		</ant>

		<echo>Copy HTTP Servlet</echo>
		<ant antfile="${release.dir}/extra/restcomm-http/build.xml" target="deploy">
			<property name="basedir" value="${release.dir}/extra/restcomm-http" />	
		</ant>

		<echo>Copy Resources</echo>
		<copy file="${checkout.dir}/${restcomm-diam-ra-base.download.jar.file}" todir="${release.dir}/resources/diameter-base" failonerror="true" />
		<copy file="${checkout.dir}/${restcomm-diam-ra-ro.download.jar.file}" todir="${release.dir}/resources/diameter-ro" failonerror="true" />

        <echo>Copy Diameter Config Files</echo>
        <copy todir="${release.dir}/resources/ocs" failonerror="true">
            <fileset dir="${checkout.restcomm-smsc.dir}/core/bootstrap/src/main/config/ocs">
                <include name="**" />
            </fileset>
        </copy>

		<echo>Copy SMSC extensions</echo>
		<mkdir dir="${release.dir}/extra/smsc" />
		<copy todir="${release.dir}/extra/smsc/module" failonerror="true">
            <fileset dir="${checkout.restcomm-smsc.dir}/core/bootstrap-wildfly/target/module">
                <include name="**" />
            </fileset>
        </copy>
		<copy file="${checkout.restcomm-smsc.dir}/release-wildfly/extensions-build.xml" todir="${release.dir}/extra/smsc" failonerror="true" />
		<copy file="${checkout.restcomm-smsc.dir}/release-wildfly/wildfly-smsc-subsystem.txt" todir="${release.dir}/extra/smsc" failonerror="true" />
		<copy file="${checkout.restcomm-smsc.dir}/release-wildfly/wildfly-jss7-subsystem.txt" todir="${release.dir}/extra/smsc" failonerror="true" />
		<copy file="${checkout.restcomm-smsc.dir}/release-wildfly/xmltask.jar" todir="${release.dir}/extra/smsc" failonerror="true" />
		<copy file="${checkout.restcomm-smsc.dir}/release-wildfly/smsc-logging.txt" todir="${release.dir}/extra/smsc" failonerror="true" />
		<ant antfile="${release.dir}/extra/smsc/extensions-build.xml" target="deploy">
			<property name="basedir" value="${release.dir}/extra/smsc" />	
		</ant>
		<delete dir="${release.dir}/extra/smsc" />

        <echo>Copy SMSC server</echo>
        <copy file="${checkout.restcomm-smsc.dir}/core/slee/resource-adaptors/du/target/smsc-resource-adaptors-du-${restcomm.smsc.release.version}.jar" todir="${jboss.home}/standalone/deployments" failonerror="true" />
		<!-- already present in MProc RA DU -->
		<!-- <copy file="${checkout.restcomm-smsc.dir}/core/slee/resource-adaptors/mproc-ra/du-ratype/target/mproc-ratype-du-${restcomm.smsc.release.version}.jar" todir="${jboss.home}/standalone/deployments" failonerror="true" /> -->
        <copy file="${checkout.restcomm-smsc.dir}/core/slee/resource-adaptors/mproc-ra/du-ra/target/mproc-ra-du-${restcomm.smsc.release.version}.jar" todir="${jboss.home}/standalone/deployments" failonerror="true" />
        <copy file="${checkout.restcomm-smsc.dir}/core/slee/services/du/target/smsc-services-du-${restcomm.smsc.release.version}.jar" todir="${jboss.home}/standalone/deployments" failonerror="true" />

		<copy file="${release.dir}/resources/map/${restcomm-map-ra.download.jar.file}" todir="${jboss.home}/standalone/deployments" failonerror="true" />
		<copy file="${release.dir}/resources/smpp/${restcomm-smpp-ra.download.jar.file}" todir="${jboss.home}/standalone/deployments" failonerror="true" />
        <copy file="${checkout.restcomm-smsc.dir}/management/ui-management/target/smsc-management.war" todir="${jboss.home}/standalone/deployments" failonerror="true" />
        <copy file="${checkout.restcomm-smpp-extensions.dir}/restcomm-smpp-extensions-${restcomm-smpp-extensions.version}-${restcomm-smpp-extensions.build-number}/oam/new-ui/smpp-management.war" todir="${jboss.home}/standalone/deployments" failonerror="true" />
        <mkdir dir="${jboss.home}/standalone/data" />
        
	<!--tools-->
        <copy todir="${release.dir}/tools/restcomm-jss7-simulator" failonerror="true">
            <fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/ss7/restcomm-ss7-simulator">
                <include name="**" />
            </fileset>
        </copy>
        <copy todir="${release.dir}/tools/restcomm-smpp-simulator" failonerror="true">
            <fileset dir="${checkout.restcomm-smsc.dir}/tools/smpp-simulator/bootstrap/target/simulator-smpp">
                <include name="**" />
            </fileset>
        </copy>
        
	<!-- tools : smpp-load -->
        <copy todir="${release.dir}/tools/restcomm-smpp-load/target/load" failonerror="true">
            <fileset dir="${checkout.restcomm-smsc.dir}/test/smpp-load/target/smpp-load">
                <include name="**" />
            </fileset>
        </copy>
        <copy todir="${release.dir}/tools/restcomm-smpp-load/src/main/resources" failonerror="true">
            <fileset dir="${checkout.restcomm-smsc.dir}/test/smpp-load/src/main/resources">
                <include name="**" />
            </fileset>
        </copy>
        <copy file="${checkout.restcomm-smsc.dir}/test/smpp-load/build.xml" todir="${release.dir}/tools/restcomm-smpp-load" failonerror="true" />
        
	<!--CLI-->
        <copy file="${checkout.restcomm-smsc.dir}/core/oam/cli/target/smsc-cli-${restcomm.smsc.release.version}.jar" todir="${jboss.home}/lib" failonerror="true" />
        <copy todir="${jboss.home}/" failonerror="true">
            <fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/ss7/shell">
                <include name="**/*" />
            </fileset>
        </copy>
        <copy todir="${jboss.home}/lib/" failonerror="true">
            <fileset dir="${checkout.restcomm-smpp-extensions.dir}/restcomm-smpp-extensions-${restcomm-smpp-extensions.version}-${restcomm-smpp-extensions.build-number}/shell/lib">
                <include name="smpp-cli-${restcomm-smpp-extensions.version}-${restcomm-smpp-extensions.build-number}.jar" />
            </fileset>
        </copy>

	<!-- oam/new-ui - jolokia war & jss7-management-console.war-->
        <copy file="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/oam/new-ui/jolokia.war" todir="${jboss.home}/standalone/deployments" failonerror="true" />
        <copy file="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/oam/new-ui/jss7-management-console.war" todir="${jboss.home}/standalone/deployments" failonerror="true" />
        <!-- restcomm Management HQ is not needed
		<echo>restcomm Management Hq</echo>
		<copy file="${checkout.restcomm-management-hq.dir}/restcomm-management.war" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" />
    	-->
        
	<!-- Cassandra -->
        <echo>Copy Cassandra conf</echo>
        <copy todir="${cassandra.dir}" failonerror="true">
            <fileset dir="${checkout.restcomm-smsc.dir}/cassandra">
                <include name="**" />
            </fileset>
        </copy>
        
	<!-- jss7 config-->
        <copy file="${checkout.restcomm-smsc.dir}/core/bootstrap/src/main/config/ss7-simulator/main_simulator2.xml" todir="${release.dir}/tools/restcomm-jss7-simulator/data" failonerror="true" />
        <copy file="${checkout.restcomm-smsc.dir}/core/bootstrap/src/main/config/ss7-simulator/win_simulator2.xml" todir="${release.dir}/tools/restcomm-jss7-simulator/data" failonerror="true" />
        <copy file="${checkout.restcomm-smsc.dir}/core/bootstrap/src/main/config/ss7-simulator/main_hr_simulator2.xml" todir="${release.dir}/tools/restcomm-jss7-simulator/data" failonerror="true" />
        <copy file="${checkout.restcomm-smsc.dir}/core/bootstrap/src/main/config/ss7-simulator/win_hr_simulator2.xml" todir="${release.dir}/tools/restcomm-jss7-simulator/data" failonerror="true" />
	
	<!-- jDiameter - mux & RA's-->
        <copy file="${checkout.dir}/${restcomm-diam-ra-base.download.jar.file}" todir="${jboss.home}/standalone/deployments" failonerror="true" />
        <copy file="${checkout.dir}/${restcomm-diam-ra-ro.download.jar.file}" todir="${jboss.home}/standalone/deployments" failonerror="true" />
        
        <copy todir="${jboss.home}/standalone/deployments" failonerror="true">
            <fileset dir="${release.dir}/resources/sip11">
                <include name="sip11-ra-DU-**.**" />
            </fileset>
        </copy>
        <copy todir="${jboss.home}/standalone/deployments" failonerror="true">
            <fileset dir="${release.dir}/resources/http-servlet">
                <exclude name="*.xml" />
            </fileset>
        </copy>

	<!-- prepare simulator profile -->
	<mkdir dir="${jboss.home}/simulator" />
        <copy todir="${jboss.home}/simulator" failonerror="true">
            <fileset dir="${jboss.home}/standalone">
                <include name="**" />
            </fileset>
        </copy>
	<mkdir dir="${jboss.home}/simulator/data" />
        <copy todir="${jboss.home}/simulator/data" failonerror="true">
            <fileset dir="${checkout.restcomm-smsc.dir}/core/bootstrap/src/main/config/data">
                <include name="**" />
            </fileset>
        </copy>
    </target>

    <target name="build-docs">
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-smsc.dir}/docs">
            <arg line="${release.build.goals} -Pall -Dmaven.test.skip=true" />
        </exec>
    </target>

    <target name="copy-docs">
        <!--docs-->
        <delete dir="${docs.dir}/resources/map" />
        <copy todir="${docs.dir}/resources/map/html-book" failonerror="true">
            <fileset dir="${checkout.restcomm-map-ra.dir}/generated-docs/html-book"></fileset>
        </copy>
        <copy todir="${docs.dir}/resources/map/pdf" failonerror="true">
            <fileset dir="${checkout.restcomm-map-ra.dir}/generated-docs/pdf"></fileset>
        </copy>

		<copy todir="${docs.dir}/resources/smpp/html-book" failonerror="true">
			<fileset dir="${checkout.restcomm-smpp-ra.dir}/generated-docs/html-book">
			</fileset>
		</copy>
		<copy todir="${docs.dir}/resources/smpp/pdf" failonerror="true">
			<fileset dir="${checkout.restcomm-smpp-ra.dir}/generated-docs/pdf">
			</fileset>
		</copy>

		<mkdir dir="${docs.dir}/smpp"/>
    	<mkdir dir="${docs.dir}/jss7" />
        <mkdir dir="${docs.dir}/smsc" />
		<copy todir="${docs.dir}/smpp" failonerror="true">
			<fileset dir="${checkout.restcomm-smpp-extensions.dir}/restcomm-smpp-extensions-${restcomm-smpp-extensions.version}-${restcomm-smpp-ra.build-number}/_docs/">
			</fileset>
		</copy>
        <copy todir="${docs.dir}/jss7" failonerror="true">
            <fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/_docs/"></fileset>
        </copy>
        <copy todir="${docs.dir}/smsc/adminguide/html-book" failonerror="true">
            <fileset dir="${checkout.restcomm-smsc.dir}/docs/adminguide/sources-asciidoc/target/generated-docs/html-book"></fileset>
        </copy>
        <copy todir="${docs.dir}/smsc/adminguide/pdf" failonerror="true">
            <fileset dir="${checkout.restcomm-smsc.dir}/docs/adminguide/sources-asciidoc/target/generated-docs/pdf">
                <include name="*.pdf" />
            </fileset>
        </copy>
        <copy todir="${docs.dir}/smsc/installationguide/html-book" failonerror="true">
            <fileset dir="${checkout.restcomm-smsc.dir}/docs/installationguide/sources-asciidoc/target/generated-docs/html-book"></fileset>
        </copy>
        <copy todir="${docs.dir}/smsc/installationguide/pdf" failonerror="true">
            <fileset dir="${checkout.restcomm-smsc.dir}/docs/installationguide/sources-asciidoc/target/generated-docs/pdf">
                <include name="*.pdf" />
            </fileset>
        </copy>
    </target>

    <target name="make-final-zip" depends="set-time-stamp">
        <zip destfile="${base.dir}/restcomm-smsc-wildfly-${restcomm.smsc.release.version}.zip" filesonly="false">
            <zipfileset dir="${release.dir}" prefix="restcomm-smsc-${restcomm.smsc.release.version}">
                <include name="**" />
            </zipfileset>
        </zip>
    </target>

    <target name="set-time-stamp" unless="skip.timestamp">
        <tstamp>
            <format property="time.stamp" pattern="yyMMddHHmm" />
        </tstamp>
    </target>

    <target name="bundle-documentation">
        <echo>bundling documentation</echo>
        <mkdir dir="${bundle.docs.dir}" />
        <copy toDir="${bundle.docs.dir}" overwrite="true">
            <fileset dir="${docs.dir}">
                <include name="**" />
            </fileset>
        </copy>
        <zip destfile="${base.dir}/restcomm-smsc-${restcomm.smsc.release.version}-docs.zip" filesonly="false">
            <zipfileset dir="${bundle.docs.dir}" prefix="restcomm-smsc-${restcomm.smsc.release.version}/docs">
                <include name="**/*" />
            </zipfileset>
        </zip>
    </target>
</project>
